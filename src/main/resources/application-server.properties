# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.url=jdbc:mysql://localhost:3306/parking_lot?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&useSSL=true

#createDatabaseIfNotExist: 데이터베이스가 존재하지 않으면 자동으로 생성하는 옵션입니다.
#useUnicode: 유니코드 사용 여부를 설정합니다.
#characterEncoding: 문자열 인코딩 종류를 설정합니다.
#characterSetResult: 결과값의 인코딩 종류를 설정합니다.
#useSSL: SSL 사용 여부에 대한 설정입니다.

#서버 mysql 아이디 및 비밀번호입니다.
spring.datasource.username=capstone
spring.datasource.password=amolang2021

#로컬로 돌릴때 이걸로 쓰세요
#spring.datasource.username=springboot
#spring.datasource.password=springboot

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
